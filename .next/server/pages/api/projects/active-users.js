"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/projects/active-users";
exports.ids = ["pages/api/projects/active-users"];
exports.modules = {

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "(api)/./pages/api/projects/active-users.js":
/*!********************************************!*\
  !*** ./pages/api/projects/active-users.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n// API для отслеживания активных пользователей в проекте\n\n// Хранилище активных пользователей и их состояний\n// Формат: { projectId: { userId: { username, color, activeDay, lastActivity } } }\nconst activeUsers = {};\n// Массив предопределенных цветов для пользователей\nconst userColors = [\n    \"#FF5733\",\n    \"#33FF57\",\n    \"#3357FF\",\n    \"#FF33F5\",\n    \"#33FFF5\",\n    \"#F5FF33\",\n    \"#FF8333\",\n    \"#8333FF\",\n    \"#33FF83\",\n    \"#FF3383\" // Малиновый\n];\n// Функция для получения случайного цвета из массива\nfunction getRandomColor(projectId) {\n    // Получаем все используемые цвета в проекте\n    const usedColors = Object.values(activeUsers[projectId] || {}).map((user)=>user.color);\n    // Фильтруем доступные цвета\n    const availableColors = userColors.filter((color)=>!usedColors.includes(color));\n    // Если есть доступные цвета, выбираем случайный из них\n    if (availableColors.length > 0) {\n        return availableColors[Math.floor(Math.random() * availableColors.length)];\n    }\n    // Если все цвета заняты, выбираем случайный из всего массива\n    return userColors[Math.floor(Math.random() * userColors.length)];\n}\n// Очистка неактивных пользователей (вызывается периодически)\nfunction cleanupInactiveUsers() {\n    const now = Date.now();\n    const inactivityThreshold = 5 * 60 * 1000; // 5 минут неактивности\n    Object.keys(activeUsers).forEach((projectId)=>{\n        Object.keys(activeUsers[projectId]).forEach((userId)=>{\n            const user = activeUsers[projectId][userId];\n            if (now - user.lastActivity > inactivityThreshold) {\n                // Удаляем неактивного пользователя\n                delete activeUsers[projectId][userId];\n            }\n        });\n        // Если в проекте не осталось активных пользователей, удаляем запись о проекте\n        if (Object.keys(activeUsers[projectId]).length === 0) {\n            delete activeUsers[projectId];\n        }\n    });\n}\n// Запускаем очистку неактивных пользователей каждую минуту\nsetInterval(cleanupInactiveUsers, 60 * 1000);\nasync function handler(req, res) {\n    // Проверяем авторизацию\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    if (!session) {\n        return res.status(401).json({\n            success: false,\n            message: \"Unauthorized\"\n        });\n    }\n    const { projectId  } = req.query;\n    if (!projectId) {\n        return res.status(400).json({\n            success: false,\n            message: \"Project ID is required\"\n        });\n    }\n    // Инициализируем структуру для проекта, если она еще не существует\n    if (!activeUsers[projectId]) {\n        activeUsers[projectId] = {};\n    }\n    const userId = session.user.id;\n    const username = session.user.username || session.user.name || session.user.email;\n    // Обработка различных типов запросов\n    switch(req.method){\n        case \"GET\":\n            // Возвращаем список активных пользователей в проекте\n            return res.status(200).json({\n                success: true,\n                users: Object.values(activeUsers[projectId] || {})\n            });\n        case \"POST\":\n            // Обновляем статус пользователя\n            const { activeDay  } = req.body;\n            // Если пользователь уже активен, обновляем его данные\n            if (activeUsers[projectId][userId]) {\n                activeUsers[projectId][userId] = {\n                    ...activeUsers[projectId][userId],\n                    activeDay,\n                    lastActivity: Date.now()\n                };\n            } else {\n                // Добавляем нового пользователя\n                activeUsers[projectId][userId] = {\n                    userId,\n                    username,\n                    color: getRandomColor(projectId),\n                    activeDay,\n                    lastActivity: Date.now()\n                };\n            }\n            return res.status(200).json({\n                success: true,\n                user: activeUsers[projectId][userId],\n                users: Object.values(activeUsers[projectId])\n            });\n        case \"DELETE\":\n            // Пользователь покидает проект или освобождает день\n            if (activeUsers[projectId][userId]) {\n                if (req.body.releaseDay) {\n                    // Освобождаем день, но оставляем пользователя активным\n                    activeUsers[projectId][userId].activeDay = null;\n                    activeUsers[projectId][userId].lastActivity = Date.now();\n                } else {\n                    // Полностью удаляем пользователя из активных\n                    delete activeUsers[projectId][userId];\n                }\n            }\n            return res.status(200).json({\n                success: true,\n                users: Object.values(activeUsers[projectId] || {})\n            });\n        default:\n            return res.status(405).json({\n                success: false,\n                message: \"Method not allowed\"\n            });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/projects/active-users.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/projects/active-users.js"));
module.exports = __webpack_exports__;

})();